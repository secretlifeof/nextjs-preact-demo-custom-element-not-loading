{"ast":null,"code":"import { h, cloneElement, render, hydrate } from 'preact';\nexport default function register(Component, tagName, propNames, options) {\n  function PreactElement() {\n    var inst = Reflect.construct(HTMLElement, [], PreactElement);\n    inst._vdomComponent = Component;\n    inst._root = options && options.shadow ? inst.attachShadow({\n      mode: 'open'\n    }) : inst;\n    return inst;\n  }\n\n  PreactElement.prototype = Object.create(HTMLElement.prototype);\n  PreactElement.prototype.constructor = PreactElement;\n  PreactElement.prototype.connectedCallback = connectedCallback;\n  PreactElement.prototype.attributeChangedCallback = attributeChangedCallback;\n  PreactElement.prototype.detachedCallback = detachedCallback;\n  PreactElement.observedAttributes = propNames || Component.observedAttributes || Object.keys(Component.propTypes || {});\n  return customElements.define(tagName || Component.tagName || Component.displayName || Component.name, PreactElement);\n}\n\nfunction connectedCallback() {\n  this._vdom = toVdom(this, this._vdomComponent);\n  (this.hasAttribute('hydrate') ? hydrate : render)(this._vdom, this._root);\n}\n\nfunction attributeChangedCallback(name, oldValue, newValue) {\n  if (!this._vdom) return;\n  var props = {};\n  props[name] = newValue;\n  this._vdom = cloneElement(this._vdom, props);\n  render(this._vdom, this._root);\n}\n\nfunction detachedCallback() {\n  render(this._vdom = null, this._root);\n}\n\nfunction toVdom(element, nodeName) {\n  if (element.nodeType === 3) return element.data;\n  if (element.nodeType !== 1) return null;\n  var children = [],\n      props = {},\n      i = 0,\n      a = element.attributes,\n      cn = element.childNodes;\n\n  for (i = a.length; i--;) {\n    props[a[i].name] = a[i].value;\n  }\n\n  for (i = cn.length; i--;) {\n    children[i] = toVdom(cn[i]);\n  }\n\n  return h(nodeName || element.nodeName.toLowerCase(), props, children);\n}","map":{"version":3,"sources":["/Users/espenfinnesand/WebDev/TEST_AREA/nextjs-preact-demo/components/preact-custom-element.js"],"names":["h","cloneElement","render","hydrate","register","Component","tagName","propNames","options","PreactElement","inst","Reflect","construct","HTMLElement","_vdomComponent","_root","shadow","attachShadow","mode","prototype","Object","create","constructor","connectedCallback","attributeChangedCallback","detachedCallback","observedAttributes","keys","propTypes","customElements","define","displayName","name","_vdom","toVdom","hasAttribute","oldValue","newValue","props","element","nodeName","nodeType","data","children","i","a","attributes","cn","childNodes","length","value","toLowerCase"],"mappings":"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","sourcesContent":["import { h, cloneElement, render, hydrate } from 'preact'\n\nexport default function register(Component, tagName, propNames, options) {\n\n\n  function PreactElement() {\n    const inst = Reflect.construct(HTMLElement, [], PreactElement)\n    inst._vdomComponent = Component\n    inst._root =\n      options && options.shadow ? inst.attachShadow({ mode: 'open' }) : inst\n    return inst\n  }\n  PreactElement.prototype = Object.create(HTMLElement.prototype)\n  PreactElement.prototype.constructor = PreactElement\n  PreactElement.prototype.connectedCallback = connectedCallback\n  PreactElement.prototype.attributeChangedCallback = attributeChangedCallback\n  PreactElement.prototype.detachedCallback = detachedCallback\n  PreactElement.observedAttributes =\n    propNames ||\n    Component.observedAttributes ||\n    Object.keys(Component.propTypes || {})\n\n  return customElements.define(\n    tagName || Component.tagName || Component.displayName || Component.name,\n    PreactElement\n  )\n}\n\nfunction connectedCallback() {\n  this._vdom = toVdom(this, this._vdomComponent)\n  ;(this.hasAttribute('hydrate') ? hydrate : render)(this._vdom, this._root)\n}\n\nfunction attributeChangedCallback(name, oldValue, newValue) {\n  if (!this._vdom) return\n  const props = {}\n  props[name] = newValue\n  this._vdom = cloneElement(this._vdom, props)\n  render(this._vdom, this._root)\n}\n\nfunction detachedCallback() {\n  render((this._vdom = null), this._root)\n}\n\nfunction toVdom(element, nodeName) {\n  if (element.nodeType === 3) return element.data\n  if (element.nodeType !== 1) return null\n  let children = [],\n    props = {},\n    i = 0,\n    a = element.attributes,\n    cn = element.childNodes\n  for (i = a.length; i--; ) props[a[i].name] = a[i].value\n  for (i = cn.length; i--; ) children[i] = toVdom(cn[i])\n  return h(nodeName || element.nodeName.toLowerCase(), props, children)\n}\n"]},"metadata":{},"sourceType":"module"}